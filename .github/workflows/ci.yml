name: CI actions
on:
  push:
    branches: [ master ]
    paths-ignore:
      - README.md
      - CHANGELOG.md

  pull_request:
    branches: [ master ]
    paths-ignore:
      - README.md
      - CHANGELOG.md

jobs:
  format_check:
    name: Check C++ format and style
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: pipx install clang-format==16.0.6

      - name: Run clang-format
        run: find {benchmarks,tests,sources,RobustCV,examples}/ -name "*.cpp" -o -name "*.hpp" | xargs clang-format --dry-run --Werror

  build_and_test:
    needs: [ format_check ]
    runs-on: ${{ matrix.os }}
    name: Build and test
    strategy:
      matrix:
        build_type: [ Release ]
        os: [ ubuntu-22.04, windows-2022, macos-13 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install pkg-config for vcpkg
        if: matrix.os == 'macos-13'
        run:
          brew install pkg-config

      - name: Install Catch2
        run: |
          vcpkg install catch2

      - name: Build tests, benchmarks and examples
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}  ..
          cmake --build . -j --config ${{ matrix.build_type }}

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

      # - name: Install RobustCV
      #   if: matrix.os == 'ubuntu-22.04'
      #   run: |
      #     cd build
      #     sudo cmake --install .
      #
      # - name: Check cmake target installation
      #   if: matrix.os == 'ubuntu-22.04'
      #   run: cmake --find-package -DNAME=RobustCV -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST
